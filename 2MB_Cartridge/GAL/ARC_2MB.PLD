Name       ARC_2MB;
Partno     XXXXX;
Date       XX/XX/XX;
Revision   XX;
Designer   XXXXX;
Company    XXXXX;
Assembly   XXXXX;
Location   XXXXX;
Device     g16v8;


/**********************************************************************/
/*Arcadia 2MB Cartridge Address Decoder GAL                           */
/**********************************************************************/

/** Inputs **/

PIN     1   = A17;  /* A17 Input */
PIN     2   = A18;  /* A18 Input */
PIN     3   = A19;  /* A19 Input */
PIN     4   = A20;  /* A20 Input */
PIN     5   = A21;  /* A21 Input */
PIN     6   = A22;  /* A22 Input */
PIN     7   = A23;  /* A23 Input */
PIN     8   = R_W;  /* R/W Input */
PIN     9   = !AS;  /* /AS Input */

/** Outputs **/

PIN    12   = !EP_CE;  /* EPROM /CE Output */
PIN    13   = EP_A19; /* EPROM A19 Output */
PIN    14   = EP_A20; /* EPROM A20 Output */
PIN    15   = !NV_CE;  /* NVRAM /CE Output */
PIN    16   = !OE;     /* EPROM and NVRAM /OE Output */
PIN    17   = !NV_WE;  /* NVRAM /WE Output */

/** Logic Equations **/
/* Signals implemented in GAL based on original "piggyback" cart signals */

/* EP_CE: 0 when /AS=0 and address between either 0x800000 and 0x9DFFFF (A23..A21=100 and A20..A17!=1111) or 0xF00000 and 0xF1FFFF (A23..A17=1111000), else 1 */
CONDITION {
  IF
  AS & A23 & !A22 & !A21 & !(A20 & A19 & A18 & A17) #
  AS & A23 & A22 & A21 & A20 & !A19 & !A18 & !A17
  out EP_CE;
}

/* EP_A19 and EP_A20 remaps 0xF000000-0xF1FFFF to 0x980000-0x99FFFF (Amiga Kickstart attempts to execute from 0xF000000) */
/* EP_A19: 1 when address between 0xF00000 and 0xF1FFFF (A23..A17=1111000), else A19 */
CONDITION {
  IF
  A19 #
  A23 & A22 & A21 & A20 & !A19 & !A18 & !A17
  out EP_A19;
}

/* EP_A20: 1 when address between 0xF00000 and 0xF1FFFF (A23..A17=1111000), else A20 */
/* Could do this condition, but it's equivalent to simply EP_A20 = A20 */
/*CONDITION {
  IF
  A20 #
  A23 & A22 & A21 & A20 & !A19 & !A18 & !A17
  out A20;
}*/
EP_A20 = A20;

/* NV_CE: 0 when /AS=0 and address between 0x9E0000 and 0x9FFFFF (A23..A17=1001111), else 1 */
CONDITION {
  IF AS & A23 & !A22 & !A21 & A20 & A19 & A18 & A17 out NV_CE;
}

/* OE: 0 when reading (R/W=1), else 1 */
CONDITION {
  IF R_W out OE;
}

/* NV_WE: 0 when writing (/AS=0 and R/W=0), else 1 */
CONDITION {
  IF AS & !R_W out NV_WE;
}
